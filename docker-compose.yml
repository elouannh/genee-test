version: "3"

networks:
  network:
    driver: bridge

services:

  flask:
    build:
      context: ./back/.
      dockerfile: Dockerfile
    networks:
      - network
    depends_on:
      - postgres
    env_file:
      - .env
    links:
      - postgres
    environment:
      - FLASK_APP=main.py
    ports:
      - "5678:5678"
      - "5001:5001"
    container_name: gt_back
    volumes:
      - ./back/.:/code/

  frontend:
    depends_on: 
      - flask
    container_name: frontend
    init: true
    restart: unless-stopped
    build:
      context: ./front/.
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    environment:
      PORT: ${FRONT_PORT}
      REACT_APP_SERVER_PORT: ${BACK_PORT}
      REACT_APP_CLIENT_PORT: ${FRONT_PORT}
    volumes:
      - ./front/.:/app/
  
  postgres:
    container_name: postgres
    restart: unless-stopped
    build:
      context: ./postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      FLASK_ENV: "development"
      FLASK_DEBUG: "1"
    networks:
      - network

  mongo:
    container_name: mongo
    image: mongo
    logging:
      driver: none
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    networks:
      - network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/
    networks:
      - network